<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Resilience4j on 拳拳到肉</title>
    <link>/tags/resilience4j/</link>
    <description>Recent content in Resilience4j on 拳拳到肉</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Wed, 15 Apr 2020 16:37:42 +0800</lastBuildDate>
    
	<atom:link href="/tags/resilience4j/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Resilience4j CircuitBreaker 源码分析</title>
      <link>/blog/resilience4j-circuitbreaker-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
      <pubDate>Wed, 15 Apr 2020 16:37:42 +0800</pubDate>
      
      <guid>/blog/resilience4j-circuitbreaker-%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</guid>
      <description>简述 在Resilience4j 中所有模块的事件机制采用了观察者模式，所以先写一个观察者模式熟悉一下以便在之后的源码分析。 //抽象的主体角色 interface</description>
    </item>
    
  </channel>
</rss>